# based on https://github.com/lobehub/lobe-chat/blob/main/docker-compose/local/docker-compose.yml

services:
  shared-network:
    image: alpine
    container_name: lobe-network
    ports:
      - '${MINIO_PORT}:${MINIO_PORT}' # MinIO API
      - '9001:9001' # MinIO Console
      - '${CASDOOR_PORT}:${CASDOOR_PORT}' # Casdoor
      - '${LOBE_PORT}:3210' # LobeChat
      - '11434:11434' # ollama
    command: tail -f /dev/null

  # https://github.com/pgvector/pgvector
  postgresql:
    image: pgvector/pgvector:pg16
    container_name: postgresql
    volumes:
      - './data/postgresql:/var/lib/postgresql/data'
    # https://hub.docker.com/_/postgres
    environment:
      POSTGRES_DB: ${LOBE_DB_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      #POSTGRES_HOST_AUTH_METHOD=trust'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  minio:
    image: minio/minio
    container_name: minio
    # ports:
    #   - "${MINIO_PORT}:${MINIO_PORT}"
    volumes:
      - './data/minio:/etc/minio/data'
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_API_CORS_ALLOW_ORIGIN: "*"
    restart: always
    command: >
      server /etc/minio/data --address ":${MINIO_PORT}" --console-address ":9001"
    network_mode: 'service:shared-network'

  casdoor:
    image: casbin/casdoor
    container_name: casdoor
    entrypoint: /bin/sh -c 'sleep 15; ./server --createDatabase=true'
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      RUNNING_IN_DOCKER: 'true'
      driverName: 'postgres'
      dataSourceName: 'user=postgres password=${POSTGRES_PASSWORD} host=postgresql port=5432 sslmode=disable dbname=casdoor'
      origin: 'http://localhost:${CASDOOR_PORT}'
      runmode: 'dev'
    volumes:
      - ./init_data.json:/init_data.json
    # ports:
    #   - "${CASDOOR_PORT}:${CASDOOR_PORT}"
    network_mode: 'service:shared-network'


  lobe:
    image: lobehub/lobe-chat-database
    container_name: lobe-chat
    # ports:
    #   - '3210:3210'
    depends_on:
      postgresql:
        condition: service_healthy
      minio:
        condition: service_started
    casdoor:
        condition: service_started
    environment:
      APP_URL: http://localhost:3210
      NEXT_AUTH_SSO_PROVIDERS: casdoor
      KEY_VAULTS_SECRET: Kix2wcUONd4CX51E/ZPAd36BqM4wzJgKjPtz2sGztqQ=
      NEXT_AUTH_SECRET: NX2kaPE923dt6BL2U8e9oSre5RfoT7hg
      AUTH_URL: "http://localhost:${LOBE_PORT}/api/auth"
      AUTH_CASDOOR_ISSUER: "http://localhost:${CASDOOR_PORT}"
      DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD}@postgresql:5432/${LOBE_DB_NAME}"
      S3_ENDPOINT: "http://minio:${MINIO_PORT}"
      S3_BUCKET: ${MINIO_LOBE_BUCKET}
      S3_PUBLIC_DOMAIN: "http://localhost:${MINIO_PORT}"
      S3_ENABLE_PATH_STYLE: 1
      LLM_VISION_IMAGE_USE_BASE64: 1
      OLLAMA_PROXY_URL: "http://localhost:11434"
    env_file:
      - .env
    restart: always
    network_mode: 'service:shared-network' # for access casdoor as localhost

  ollama:
    image: ollama/ollama
    container_name: ollama
    environment:
      OLLAMA_ORIGINS: '*'
      OLLAMA_HOST: '0.0.0.0'
    volumes:
      - './data/ollama:/root/.ollama'
    # privileged: true # for GPU
    restart: always
    network_mode: 'service:shared-network'
